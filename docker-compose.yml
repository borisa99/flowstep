version: "3.6"
services:
  graphql-engine:
    image: hasura/graphql-engine:v2.3.1
    ports:
      - "8080:8080"
    environment:
      ## postgres database to store Hasura metadata
      HASURA_GRAPHQL_METADATA_DATABASE_URL: postgres://postgres:mysecretpassword@host.docker.internal:5432/flowstepTest
      ## this env var can be used to add the above postgres database to Hasura as a data source. this can be removed/updated based on your needs
      PG_DATABASE_URL: postgres://postgres:mysecretpassword@host.docker.internal:5432/flowstepTest
      HASURA_GRAPHQL_DATABASE_URL: postgres://postgres:mysecretpassword@host.docker.internal:5432/flowstepTest
      ## enable the console served by server
      HASURA_GRAPHQL_ENABLE_CONSOLE: "false" # set to "false" to disable console
      ## enable debugging mode. It is recommended to disable this in production
      HASURA_GRAPHQL_DEV_MODE: "true"
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      ## uncomment next line to set an admin secret
      HASURA_GRAPHQL_ADMIN_SECRET: myadminsecretkey
      HASURA_GRAPHQL_UNAUTHORIZED_ROLE: "public"
      ACTION_BASE_URL: "http://host.docker.internal:5000/api"
      HASURA_GRAPHQL_JWT_SECRET: >-
        {"type":"HS256", "key":"68zcgxChM2%UT@MyJ^eg5ecbR8kw9hFi74g8"}
  mailhog:
    image: mailhog/mailhog
    logging:
      driver: "none" # disable saving logs
    ports:
      - 1025:1025 # smtp server
      - 8025:8025 # web ui

